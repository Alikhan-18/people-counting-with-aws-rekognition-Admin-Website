AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda Function resource stack creation using Amplify CLI
Parameters:
  CloudWatchRule:
    Type: String
    Default: NONE
    Description: Schedule Expression
  env:
    Type: String
Conditions:
  ShouldNotCreateEnvResources:
    Fn::Equals:
      - Ref: env
      - NONE
Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      aws:asset:path: ./src
      aws:asset:property: Code
    Properties:
      Handler: index.handler
      FunctionName:
        Fn::If:
          - ShouldNotCreateEnvResources
          - iotFunction
          - !Join
            - ''
            - - iotFunction
              - -
              - Ref: env
      Environment:
        Variables:
          ENV: !Ref env
          REGION: !Ref AWS::Region
      Role: !GetAtt IAMRoleIoT.Arn
      Runtime: python3.8
      Layers: []
      Timeout: '25'
      Code:
        S3Bucket: amplify-peoplecounteradmin-dev-110447-deployment
        S3Key: amplify-builds/iotFunction-3459436d323367356969-build.zip
  IAMRoleIoT:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSIoTFullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
Outputs:
  Name:
    Value: !Ref LambdaFunction
  Arn:
    Value: !GetAtt
      - LambdaFunction
      - Arn
  Region:
    Value: !Ref AWS::Region
  LambdaExecutionRole:
    Value: !Ref IAMRoleIoT
